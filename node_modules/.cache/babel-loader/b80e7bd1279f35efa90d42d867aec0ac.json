{"ast":null,"code":"import { SUPPRESS_STATE_ACCESS_WARNING } from './useRouteCache';\nexport default function getFocusedRouteNameFromRoute(route) {\n  var _state$index;\n\n  SUPPRESS_STATE_ACCESS_WARNING.value = true;\n  const state = route.state;\n  SUPPRESS_STATE_ACCESS_WARNING.value = false;\n  const params = route.params;\n  const routeName = state ? // Get the currently active route name in the nested navigator\n  state.routes[// If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n  // The type property will only exist for rehydrated state and not for state from deep link\n  (_state$index = state.index) !== null && _state$index !== void 0 ? _state$index : typeof state.type === 'string' && state.type !== 'stack' ? 0 : state.routes.length - 1].name : // If state doesn't exist, we need to default to `screen` param if available\n  typeof (params === null || params === void 0 ? void 0 : params.screen) === 'string' ? params.screen : undefined;\n  return routeName;\n}","map":{"version":3,"sources":["getFocusedRouteNameFromRoute.tsx"],"names":["SUPPRESS_STATE_ACCESS_WARNING","state","route","params","routeName"],"mappings":"AAKA,SAAA,6BAAA,QAAA,iBAAA;AAEA,eAAe,SAAA,4BAAA,CAAA,KAAA,EAEO;AAAA,MAAA,YAAA;;AACpBA,EAAAA,6BAA6B,CAA7BA,KAAAA,GAAAA,IAAAA;AAEA,QAAMC,KAAK,GAAGC,KAAK,CAAnB,KAAA;AAEAF,EAAAA,6BAA6B,CAA7BA,KAAAA,GAAAA,KAAAA;AAEA,QAAMG,MAAM,GAAGD,KAAK,CAApB,MAAA;AAEA,QAAME,SAAS,GAAGH,KAAK,GACnB;AACAA,EAAAA,KAAK,CAALA,MAAAA,CACE;AACA;AAFFA,GAAAA,YAAAA,GAGEA,KAAK,CAHPA,KAAAA,MAAAA,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,YAAAA,GAIK,OAAOA,KAAK,CAAZ,IAAA,KAAA,QAAA,IAAkCA,KAAK,CAALA,IAAAA,KAAlC,OAAA,GAAA,CAAA,GAEGA,KAAK,CAALA,MAAAA,CAAAA,MAAAA,GANRA,CAAAA,EAFmB,IAAA,GAUnB;AACF,UAAOE,MAAP,KAAA,IAAOA,IAAAA,MAAP,KAAA,KAAA,CAAOA,GAAP,KAAA,CAAOA,GAAAA,MAAM,CAAb,MAAA,MAAA,QAAA,GACEA,MAAM,CADR,MAAA,GAXF,SAAA;AAeA,SAAA,SAAA;AACD","sourcesContent":["import type {\n  Route,\n  PartialState,\n  NavigationState,\n} from '@react-navigation/routers';\nimport { SUPPRESS_STATE_ACCESS_WARNING } from './useRouteCache';\n\nexport default function getFocusedRouteNameFromRoute(\n  route: Partial<Route<string>> & { state?: PartialState<NavigationState> }\n): string | undefined {\n  SUPPRESS_STATE_ACCESS_WARNING.value = true;\n\n  const state = route.state;\n\n  SUPPRESS_STATE_ACCESS_WARNING.value = false;\n\n  const params = route.params as { screen?: unknown } | undefined;\n\n  const routeName = state\n    ? // Get the currently active route name in the nested navigator\n      state.routes[\n        // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n        // The type property will only exist for rehydrated state and not for state from deep link\n        state.index ??\n          (typeof state.type === 'string' && state.type !== 'stack'\n            ? 0\n            : state.routes.length - 1)\n      ].name\n    : // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string'\n    ? params.screen\n    : undefined;\n\n  return routeName;\n}\n"]},"metadata":{},"sourceType":"module"}