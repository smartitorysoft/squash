{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\squash\\\\src\\\\components\\\\Button\\\\Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n/**\r\n * Primary UI component for user interaction\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  primary,\n  backgroundColor,\n  size,\n  label,\n  ...props\n}) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    onClick: () => {\n      alert('clicked');\n    },\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nButton.propTypes = {\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\n  primary: PropTypes.bool,\n\n  /**\r\n   * What background color to use\r\n   */\n  backgroundColor: PropTypes.string,\n\n  /**\r\n   * How large should the button be?\r\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\r\n   * Button contents\r\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\r\n   * Optional click handler\r\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Projects/squash/src/components/Button/Button.js"],"names":["React","PropTypes","Button","primary","backgroundColor","size","label","props","mode","join","alert","propTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,KAAlC;AAAyC,KAAGC;AAA5C,CAAD,KAAyD;AAC7E,QAAMC,IAAI,GAAGL,OAAO,GAAG,2BAAH,GAAiC,6BAArD;AACA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBE,IAAK,EAA/C,EAAkDG,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAFb;AAGE,IAAA,KAAK,EAAEL,eAAe,IAAI;AAAEA,MAAAA;AAAF,KAH5B;AAAA,OAIMG,KAJN;AAKE,IAAA,OAAO,EAAE,MAAM;AAAEG,MAAAA,KAAK,CAAC,SAAD,CAAL;AAAkB,KALrC;AAAA,cAOGJ;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbM;KAAMJ,M;AAebA,MAAM,CAACS,SAAP,GAAmB;AACjB;AACF;AACA;AACER,EAAAA,OAAO,EAAEF,SAAS,CAACW,IAJF;;AAKjB;AACF;AACA;AACER,EAAAA,eAAe,EAAEH,SAAS,CAACY,MARV;;AASjB;AACF;AACA;AACER,EAAAA,IAAI,EAAEJ,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAZW;;AAajB;AACF;AACA;AACER,EAAAA,KAAK,EAAEL,SAAS,CAACY,MAAV,CAAiBE,UAhBP;;AAiBjB;AACF;AACA;AACEC,EAAAA,OAAO,EAAEf,SAAS,CAACgB;AApBF,CAAnB;AAuBAf,MAAM,CAACgB,YAAP,GAAsB;AACpBd,EAAAA,eAAe,EAAE,IADG;AAEpBD,EAAAA,OAAO,EAAE,KAFW;AAGpBE,EAAAA,IAAI,EAAE,QAHc;AAIpBW,EAAAA,OAAO,EAAEG;AAJW,CAAtB;AAOA,eAAejB,MAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './button.css';\r\n\r\n/**\r\n * Primary UI component for user interaction\r\n */\r\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\r\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\r\n      style={backgroundColor && { backgroundColor }}\r\n      {...props}\r\n      onClick={() => { alert('clicked') }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  primary: PropTypes.bool,\r\n  /**\r\n   * What background color to use\r\n   */\r\n  backgroundColor: PropTypes.string,\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  /**\r\n   * Button contents\r\n   */\r\n  label: PropTypes.string.isRequired,\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  backgroundColor: null,\r\n  primary: false,\r\n  size: 'medium',\r\n  onClick: undefined,\r\n};\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}